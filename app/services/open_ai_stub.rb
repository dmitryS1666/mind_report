# frozen_string_literal: true

# –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞ "–º–æ–¥–µ–ª–∏" OpenAI –¥–ª—è dev/demo.
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Å–µ–≤–¥–æ-–æ—Ç—á—ë—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞ –∏ (–æ–ø—Ü.) —à–∞–±–ª–æ–Ω–∞.
class OpenAiStub
  # –ü—Ä–∏–Ω–∏–º–∞–µ–º **kwargs, —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞—Ç—å –æ—Ç –ª–∏—à–Ω–∏—Ö –∫–ª—é—á–µ–π (system_prompt, user_prompt –∏ —Ç.–ø.)
  def self.summarize(transcript:, prompt_key:, plan: :free, report_kind: :short, prompt: nil, **_extra)
    tips = [
      "–ì–æ–≤–æ—Ä–∏—Ç–µ –∫–æ—Ä–æ—á–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—É–∑—ã.",
      "–ß–∞—â–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–π—Ç–µ —Ü–µ–Ω–Ω–æ—Å—Ç—å –∏ –≤—ã–≥–æ–¥—ã.",
      "–ë–æ–ª—å—à–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.",
      "–ü–æ–¥–≤–æ–¥–∏—Ç–µ –∏—Ç–æ–≥–∏ –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º.",
      "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –∏ –∫–µ–π—Å—ã."
    ]
    findings = [
      "–∫–ª–∏–µ–Ω—Ç —Å–æ–º–Ω–µ–≤–∞–µ—Ç—Å—è –≤ —Å—Ä–æ–∫–∞—Ö",
      "–≤–∞–∂–Ω–∞ –≥–∞—Ä–∞–Ω—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞",
      "–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∏ –≤ —Ü–µ–Ω–µ",
      "–ø–ª–æ—Ö–æ –ø—Ä–æ—è—Å–Ω–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏"
    ]

    prompt_title = prompt&.version ? "#{prompt.key} v#{prompt.version}" : prompt_key.to_s

    <<~TEXT.strip
      üß† –û—Ç—á—ë—Ç (#{report_kind}, —à–∞–±–ª–æ–Ω: #{prompt_title}, —Ä–µ–∂–∏–º: #{plan})

      1) –ö—Ä–∞—Ç–∫–∞—è –≤—ã–∂–∏–º–∫–∞:
      ‚Äî –ò–∑ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: ¬´#{transcript.to_s.truncate(120)}¬ª
      ‚Äî –ö–ª—é—á–µ–≤–∞—è –Ω–∞—Ö–æ–¥–∫–∞: #{findings.sample}

      2) –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (top-3):
      ‚Äî #{tips.sample}
      ‚Äî #{(tips - [tips.first]).sample}
      ‚Äî #{(tips - [tips.first, tips[1]]).sample}

      3) –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
      ‚Äî –£—Ç–æ—á–Ω–∏—Ç—å —Å—Ä–æ–∫–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Ç–æ—á–∫–∏.
      ‚Äî –°–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞.
      ‚Äî –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–π —Å–æ–∑–≤–æ–Ω.
    TEXT
  end
end
